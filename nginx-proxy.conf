events {
    worker_connections 1024;
}

http {
    upstream sensortower-proxy {
        server sensortower-proxy:8666;
    }

    server {
        listen 80;
        server_name _;

        # Health check endpoint
        location /health {
            proxy_pass http://sensortower-proxy/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # MCP endpoint
        location /mcp/ {
            proxy_pass http://sensortower-proxy/mcp/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Root path redirect to MCP endpoint (convenience)
        location = / {
            return 302 /mcp/;
        }

        # Default catch-all
        location / {
            return 404;
        }
    }
}